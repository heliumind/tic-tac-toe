{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","Array","map","_ign","row","col","renderSquare","React","Component","Game","state","history","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"qNAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAChBC,QAASF,EAAME,QADjB,SAGGF,EAAMG,Q,IAKPC,E,2KACSC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAK9B,IAAD,OAEP,OACE,8BACG,YAAI,IAAIG,MAHI,IAGaC,KAAI,SAACC,EAAMC,GACnC,OACE,qBAAKV,UAAU,YAAf,SACG,YAAI,IAAIO,MANY,IAMKC,KAAI,SAACC,EAAME,GACnC,OAAO,EAAKC,aAPO,EAOMF,EAAiBC,OAFdD,Y,GAhBxBG,IAAMC,WA8BpBC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXC,QAAS,CAAC,CACRX,QAASC,MAAM,GAAGW,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPhB,GACV,IAAMa,EAAUZ,KAAKW,MAAMC,QAAQI,MAAM,EAAGhB,KAAKW,MAAMG,WAAa,GAE9Db,EADUW,EAAQA,EAAQK,OAAS,GACjBhB,QAAQe,QAC5BE,EAAgBjB,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKW,MAAMI,QAAU,IAAM,IACxCf,KAAKmB,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBnB,QAASA,KAEXa,WAAYF,EAAQK,OACpBF,SAAUf,KAAKW,MAAMI,a,6BAIlBM,GACLrB,KAAKmB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAIlB,IAgBJC,EAhBG,OACDV,EAAUZ,KAAKW,MAAMC,QACrBW,EAAUX,EAAQZ,KAAKW,MAAMG,YAC7BU,EAASN,EAAgBK,EAAQtB,SAEjCwB,EAAQb,EAAQT,KAAI,SAACC,EAAMsB,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ9B,QAAS,kBAAM,EAAKgC,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEJ,EADEE,EACI,kBAAcA,GAEd,uBAAmBxB,KAAKW,MAAMI,QAAU,IAAM,KAIpD,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASsB,EAAQtB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK8B,YAAY9B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAM2B,IACN,6BAAKG,c,GArEIjB,IAAMC,WAmFzB,SAASS,EAAgBjB,GAWvB,IAVA,IAAM6B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA/B,EAAI,EAAGA,EAAI+B,EAAMb,OAAQlB,IAAK,CAAC,IAAD,cACnB+B,EAAM/B,GADa,GAC9BgC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIhC,EAAQ8B,IAAM9B,EAAQ8B,KAAO9B,EAAQ+B,IAAM/B,EAAQ8B,KAAO9B,EAAQgC,GACpE,OAAOhC,EAAQ8B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAACzB,EAAD,IACA0B,SAASC,eAAe,U","file":"static/js/main.eb4733bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const rowCount = 3, colCount = 3;\r\n    return (\r\n      <div>\r\n        {[...new Array(rowCount)].map((_ign, row) => {\r\n          return (\r\n            <div className=\"board-row\" key={row}>\r\n              {[...new Array(colCount)].map((_ign, col) => {\r\n                return this.renderSquare(row * colCount + col);\r\n              })\r\n              }\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((_ign, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status\r\n    if (winner) {\r\n      status = `Winner: ${winner}`;\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}